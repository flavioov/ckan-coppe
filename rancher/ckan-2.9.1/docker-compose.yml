# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "2"

services:
  ckan:
    container_name: ckan
    image: localhost:5001/my-ckan
    links:
      - db
      - solr
      - redis
    depends_on:
      - db
    ports:
      - "0.0.0.0:5000:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:ckan@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:ckan@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:datastore@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=http://e2311.asuscomm.com:5000
      - POSTGRES_PASSWORD=ckan
      - DS_RO_PASS=datastore
    volumes:
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan

  datapusher:
    container_name: datapusher
    image: localhost:5001/my-datapusher
    ports:
      - "8800:8800"

  db:
    container_name: db
    image: localhost:5001/my-db
    volumes:
      - pg_data:/var/lib/postgresql/data
  #    healthcheck:
  #      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    container_name: solr
    image: localhost:5001/my-solr
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data

  redis:
    container_name: redis
    image: redis:latest

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data: